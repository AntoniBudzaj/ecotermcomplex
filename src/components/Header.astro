---
import { Image } from "astro:assets";
import ETCLogo from "@images/ETC-logo.svg";
import { getLangFromUrl, useTranslations } from "@I18n/utils";
import { navigate } from "astro:transitions/client";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

type NavItem = {
  href: string;
  text: string;
};

const navItems: NavItem[] = [
  { href: `/${lang}/index`, text: "" },
  { href: `/${lang}/about`, text: "nav.about" },
  { href: `/${lang}/services`, text: "nav.services" },
  { href: `/${lang}/contact`, text: "nav.contact" },
  { href: `/${lang}/etcheck`, text: "nav.etcheck" },
];
---

<header class="sticky top-0 bg-white shadow-md">
  <nav class="container mx-auto px-4 py-4">
    <div class="flex justify-between items-center">
      <a href={`/${lang}/`}>
        <Image
          src={ETCLogo}
          alt="Ecotermcomplex"
          id="etc-logo__header"
          class="w-32"
        />
      </a>
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center gap-8">
        <ul class="flex gap-6">
          {
            navItems.map((item) => (
              <li>
                <a
                  href={item.href}
                  class="text-gray-600 hover:text-etc-500 transition-colors"
                >
                  {t(item.text)}
                </a>
              </li>
            ))
          }
        </ul>
        <slot />
      </div>
      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-button"
        class="md:hidden p-2 rounded-lg hover:bg-gray-100 transition-colors"
        aria-label="Toggle menu"
      >
        <svg
          class="w-6 h-6 text-gray-600"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
    <!-- Mobile Navigation -->
    <div
      id="mobile-menu"
      class="md:hidden hidden fixed inset-0 bg-white z-50 transform transition-transform duration-300 ease-in-out"
    >
      <div class="p-4">
        <div class="flex justify-between items-center mb-8">
          <Image src={ETCLogo} alt="Ecotermcomplex" class="w-32" />
          <button
            id="close-menu-button"
            class="p-2 rounded-lg hover:bg-gray-100 transition-colors"
            aria-label="Close menu"
          >
            <svg
              class="w-6 h-6 text-gray-600"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        <ul class="space-y-4">
          {
            navItems.map((item) => (
              <li>
                <a
                  href={item.href}
                  class="block text-gray-600 hover:text-etc-500 transition-colors py-2"
                >
                  {t(item.text)}
                </a>
              </li>
            ))
          }
        </ul>
        <div class="py-20">
          <slot />
        </div>
      </div>
    </div>
  </nav>
</header>

<style>
  #mobile-menu {
    transform: translateX(100%);
  }
  #mobile-menu.active {
    transform: translateX(0);
  }
</style>

<script>
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const closeMenuButton = document.getElementById("close-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");
  const mobileMenuLinks = mobileMenu?.querySelectorAll("a");

  function toggleMenu() {
    mobileMenu?.classList.toggle("hidden");
    mobileMenu?.classList.toggle("active");
    document.body.style.overflow = mobileMenu?.classList.contains("active")
      ? "hidden"
      : "";
  }

  mobileMenuButton?.addEventListener("click", toggleMenu);
  closeMenuButton?.addEventListener("click", toggleMenu);

  // Close menu when clicking a link
  mobileMenuLinks?.forEach((link) => {
    link.addEventListener("click", () => {
      if (mobileMenu?.classList.contains("active")) {
        toggleMenu();
      }
    });
  });

  // Close menu when clicking outside
  mobileMenu?.addEventListener("click", (e) => {
    if (e.target === mobileMenu) {
      toggleMenu();
    }
  });
</script>
